name: Go CI/CD

on:
  push:
    branches:
      - main

jobs:
  check-go-changes:
    name: Check Go Code Changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for Go code changes
        id: go_changes
        run: |
          if git diff --name-only ${{ github.event.before }}..${{ github.sha }} | grep -qE '\.go$'; then
            echo "Go code was modified, running tests..."
            echo "::set-output name=go_changed::true"
          else
            echo "No changes to Go code, skipping tests."
            echo "::set-output name=go_changed::false"
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Run tests
        run: go test -v ./...

  get-commit-messages:
    name: Get Commit Messages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get commit messages
        id: get_commit_messages
        run: echo "::set-output name=commit_messages::$(git log --pretty=format:'%s' ${{ github.event.before }}..${{ github.sha }})"

  build-binary:
    name: Build Binary and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Build Binary
        run: go build

      - name: Get latest release tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null) || true
          if [ -z "$latest_tag" ]; then
            echo "No existing tags, setting initial version"
            echo "::set-output name=release_tag::1.0.0"
          else
            echo "::set-output name=release_tag::$latest_tag"
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.release_tag }}
          release_name: Release ${{ steps.get_latest_tag.outputs.release_tag }}
          body: |
            Automated release from CI/CD.
            
            Commit messages since last release:
            ${{ steps.get_commit_messages.outputs.commit_messages }}
          draft: false
          prerelease: false

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gnoland-metrics  # Path to your binary
          asset_name: gnoland-metrics    # Name of the asset in the release
          asset_content_type: application/octet-stream

  build-docker:
    name: Build Docker Container
    runs-on: ubuntu-latest
    needs: [build-binary, create_release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Build Binary
        run: go build

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/orcutt989/gnoland-metrics:${{ steps.get_latest_tag.outputs.release_tag }} .
          docker tag ghcr.io/orcutt989/gnoland-metrics:${{ steps.get_latest_tag.outputs.release_tag }} ghcr.io/orcutt989/gnoland-metrics:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/orcutt989/gnoland-metrics:${{ steps.get_latest_tag.outputs.release_tag }}
          docker push ghcr.io/orcutt989/gnoland-metrics:latest
