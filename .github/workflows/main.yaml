name: Go CI/CD

on:
  push:
    branches:
      - main

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Get latest release tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null) || true
          if [ -z "$latest_tag" ]; then
            echo "::set-output name=release_tag::1.0.0"
          else
            echo "::set-output name=release_tag::$latest_tag"
          fi
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.release_tag }}
          release_name: Release ${{ steps.get_latest_tag.outputs.release_tag }}
          body: Automated release from CI/CD.
          draft: false
          prerelease: false

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Run tests
        run: go test -v ./...

  build-binary:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Build Binary
        run: go build

  build-docker:
    name: Build Docker Container
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'  # Use the latest Go version

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ steps.get_latest_tag.outputs.release_tag }} .
          docker tag ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ steps.get_latest_tag.outputs.release_tag }} ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ steps.get_latest_tag.outputs.release_tag }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
